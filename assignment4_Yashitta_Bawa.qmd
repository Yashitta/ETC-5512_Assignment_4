---
title: "What Drives Viewer Engagement on Netflix?"
subtitle: "Assignment 4 ETC5512"
author: Yashitta Bawa
format: html
editor: visual
message: false
warning: false
---

::: panel-tabset
<!-- Task 1 Tab: Data and Documenting -->

## Data Details

### üß† Research Question

This project explores the question: **What drives viewer engagement on Netflix?**

The aim is to identify which types of content‚Äîsuch as genres, release formats, or show types‚Äîtend to receive the highest viewership. In particular, the analysis considers:

-   Whether certain genres (e.g. documentaries, thrillers, reality) attract more sustained attention\
-   Whether newer titles perform better than older ones\
-   What common characteristics are shared by the most-watched shows

This question was chosen because streaming services like Netflix play a large role in everyday entertainment. Understanding what makes certain content more engaging can offer useful insights into viewer preferences, binge-watching trends, and content design.

------------------------------------------------------------------------

### üìÅ The Data

Two datasets were used in this project:

1.  **Netflix Engagement Report (Jan‚ÄìJun 2023)**\
    This dataset, published by Netflix, includes total hours watched globally for each title, along with release dates. It reflects real-world viewership patterns and serves as a direct measure of audience engagement.

2.  **Netflix Titles Metadata (from Kaggle)**\
    This dataset includes descriptive information about Netflix content such as title, type (TV show or movie), duration (either runtime in minutes or season count), genre categories, and release year.

These datasets were chosen because they are **publicly available**, contain the **relevant variables** needed to explore the research question, and are **up-to-date** as of 2023.

They are suitable for the intended analysis because: - The engagement data directly measures viewer attention - The metadata enables grouping by format and genre - Both are observational and compatible in structure after cleaning

**Licensing**:

-   The engagement report is published by Netflix and freely downloadable from the Netflix What We Watched site

-   The titles dataset is available on Kaggle under a public license

------------------------------------------------------------------------

### üõ†Ô∏è Data Collection and Preparation

**Download Process:**

-   The engagement data was downloaded as an Excel spreadsheet from the Netflix What We Watched website.

-   The metadata was downloaded in CSV format from Kaggle.

**Data Cleaning and Processing:**

-   The engagement report included a non-tabular header section, which was skipped. - Column names were cleaned and standardised using the `janitor` package.

-   The `title` column was standardised across both datasets by converting to lowercase and trimming white-space.

-   Only relevant variables were retained, including title, hours viewed, release date, genre, and type.

-   The two datasets were merged using a cleaned `title` column.

-   Some shows appear in the engagement data multiple times (e.g. one row per season). These were retained for more granular analysis.

-   The `duration` column reflects minutes for movies and season count for TV shows. This limits direct comparisons across formats.

These steps ensured the dataset was clean, merged, and ready for structured analysis and visualisation.

```{r}
# Loaded required libraries
library(readr)
library(readxl)
library(here)
library(janitor)
library(dplyr)
library(stringr)
library(lubridate)
library(tidyr)
library(ggplot2)
library(plotly)
library(scales)
library(ggridges)
library(patchwork)

# Loaded the datasets
titles <- read_csv(here("data/netflix_titles.csv")) %>% 
  clean_names()
engagement_report <- read_excel(here("data/Netflix_Engagement_Report.xlsx"), 
                                     skip = 5) %>% 
  clean_names()

# Standardised the titles for merging
titles <- titles %>%
  mutate(title_clean = str_to_lower(str_trim(title)))

engagement_report <- engagement_report %>%
  mutate(title_clean = str_to_lower(str_trim(title)),
    release_year = lubridate::year(release_date))

# Merged datasets using a left join
netflix_clean <- left_join(engagement_report, titles, by = "title_clean") %>%
  filter(!is.na(type), !is.na(duration), !is.na(listed_in)) %>%
  mutate(
    release_year = lubridate::year(release_date)) %>%
  select(title = title.x,
         release_date,
         hours_viewed,
         release_year,
         type, 
         duration, 
         listed_in)

# Added a new column with season removed
netflix_clean <- netflix_clean %>%
  mutate(base_title = str_remove(title, ": Season \\d+|: Limited Series"))

# Group by base title + genre/type and summarise
netflix_grouped <- netflix_clean %>%
  group_by(base_title, type, listed_in) %>%
  summarise(
    total_hours = sum(hours_viewed, na.rm = TRUE),
    .groups = "drop")

# Separated movie duration (in minutes) and show duration (season count)
netflix_clean <- netflix_clean %>%
  mutate(
    duration_num = parse_number(duration),
    duration_type = case_when(
      str_detect(duration, "min") ~ "minutes",
      str_detect(duration, "Season") ~ "seasons",
      TRUE ~ "unknown"))
```

------------------------------------------------------------------------

### üìä Dataset Creation for Visualisation

**Genre Breakdown: Most Watched Categories Overall**

To understand which genres attract the most viewership, multi-genre entries were separated and total hours viewed were aggregated for each individual genre.

To compare trends across formats, the dataset was further grouped by both `type` (Movie or TV Show) and `genre`. The top 10 genres were selected separately for each format based on total viewing hours, then combined into a single dataset to allow visual comparison. While some genres appeared in both lists (e.g. Dramas, Sci-Fi & Fantasy), others were format-specific ‚Äî such as Crime TV Shows or Romantic Movies.

This preparation enabled a clear side-by-side breakdown of audience preferences by format, shown through a faceted bar chart in the blog post tab. The plot offers insight into which genres perform better within each format and highlights how structural differences in content affect viewership.

```{r}
genre_summary <- netflix_clean %>%
  separate_rows(listed_in, sep = ",\\s*") %>%
  group_by(listed_in) %>%
  summarise(total_hours = sum(hours_viewed, na.rm = TRUE)) %>%
  arrange(desc(total_hours)) %>%
  slice_head(n = 10)

# Preprocess genre order
genre_summary <- genre_summary %>%
  mutate(listed_in = factor(listed_in, 
                            levels = listed_in[order(total_hours)]))
```

**Genre Preferences by Format**

To compare viewership patterns between TV shows and movies, titles were grouped by type and summary statistics such as mean and median hours viewed were calculated.

To further investigate genre-based viewing patterns across both formats, titles were grouped by both `type` and `genre`, and total viewing hours were aggregated.\
Separate top 10 genres were selected for each format to highlight the most popular content, and overlapping genres were retained for comparison.

This dataset was used to create a **side-by-side faceted bar chart**, showing the top genres by total hours viewed for **movies** on the left and **TV shows** on the right.\
The layout helps highlight which genres perform better within each content format.

```{r}
format_summary <- netflix_clean %>%
  group_by(type) %>%
  summarise(
    mean_hours = mean(hours_viewed, na.rm = TRUE),
    median_hours = median(hours_viewed, na.rm = TRUE),
    count = n())

# Full summary of genres by format
genre_all <- netflix_clean %>%
  separate_rows(listed_in, sep = ",\\s*") %>%
  group_by(type, genre = listed_in) %>%
  summarise(hours_viewed = sum(hours_viewed, na.rm = TRUE), .groups = "drop")

# Top 10 Movie genres
top_movie_genres <- genre_all %>%
  filter(type == "Movie") %>%
  arrange(desc(hours_viewed)) %>%
  slice_head(n = 10) %>%
  pull(genre)

# Top 10 TV genres
top_tv_genres <- genre_all %>%
  filter(type == "TV Show") %>%
  arrange(desc(hours_viewed)) %>%
  slice_head(n = 10) %>%
  pull(genre)

# Combine all 20 genres (with overlap if any)
selected_genres <- union(top_movie_genres, top_tv_genres)

# Final dataset: includes Movie + TV rows for those 20 genres
genre_by_type <- genre_all %>%
  filter(genre %in% selected_genres)
```

**Duration vs. Format**

To explore how content length varies between movies and TV shows, the `duration` column was cleaned and separated into two distinct units: **minutes** (for movies) and **seasons** (for shows). These values were extracted numerically and stored in a new column called `duration_num`.

Entries marked as "other" or with missing type/duration values were filtered out. This created a consistent dataset for comparing structural differences in content length.

The dataset was then split by format (`Movie` vs `TV Show`) and visualised using **violin plots**. Each plot shows the distribution of durations across titles, allowing insight into how runtime conventions differ by format.

For instance, movies typically fall within the 90‚Äì120 minute range, while most TV shows cluster around 1‚Äì2 seasons. This transformation supports a focused visualisation of **duration norms** and sets the foundation for analysing their relationship with viewer engagement.

```{r}
duration_clean <- netflix_clean %>%
  mutate(
    duration_num = readr::parse_number(duration),
    duration_type = case_when(
      str_detect(duration, "min") ~ "minutes",
      str_detect(duration, "Season") ~ "seasons",
      TRUE ~ "other")) %>%
  filter(!is.na(duration_num))

# Clean duration data
duration_clean <- netflix_clean %>%
  filter(!is.na(duration), 
         !is.na(type)) %>%
  mutate(
    duration_num = case_when(
      str_detect(duration, "min") ~ parse_number(duration),
      str_detect(duration, "Season") ~ parse_number(duration),
      TRUE ~ NA_real_),
    duration_unit = case_when(
      str_detect(duration, "min") ~ "Minutes",
      str_detect(duration, "Season") ~ "Seasons",
      TRUE ~ "Other")) %>%
  filter(!is.na(duration_num), 
         duration_unit != "Other")
```

------------------------------------------------------------------------

### üìö References

-   Netflix. *What We Watched: A Netflix Engagement Report*. Retrieved from: https://www.netflix.com/whatwewatched\
-   Shivamb. *Netflix Movies and TV Shows Dataset*. Retrieved from: https://www.kaggle.com/datasets/shivamb/netflix-shows\
-   R Packages used: `readxl`, `readr`, `dplyr`, `stringr`, `janitor`, `lubridate`, `here`, `tidyr`

<!-- Task 2 Tab: Writing your blogpost -->

## Blog post

### üé¨ Motivation

With Netflix content spanning everything from gritty thrillers to romantic comedies, it‚Äôs easy to wonder: **what actually keeps people watching?** This project explores how genres, content type, and show structure relate to viewer engagement. Using real-world viewing data, it uncovers patterns that help explain what makes certain shows binge-worthy while others fade into the background.

------------------------------------------------------------------------

### üìä Data

The analysis uses two combined datasets:

-   The **Netflix Engagement Report (Jan‚ÄìJun 2023)**, which lists total hours viewed for each title globally.
-   A **Netflix metadata set** from Kaggle, which adds information about each show‚Äôs genre, type (TV show or movie), and duration.

After merging and cleaning the data, each row represents a specific show or season, along with how many hours it was watched. The final dataset enables comparisons across genres, formats, and lengths.

------------------------------------------------------------------------

### üìà Analysis

#### **1. Top Genres by Total Viewing Time**

**Most-Watched Titles on Netflix (Jan‚ÄìJun 2023)**

To ground the genre and format patterns in real examples, this table highlights the five most-watched Netflix releases in the first half of 2023. It includes both movies and TV shows, spanning a range of genres. These titles illustrate how varied content ‚Äî from action-packed films to true crime docuseries ‚Äî can drive massive engagement. Presenting this alongside the genre and duration breakdowns helps link abstract trends to recognisable shows.

```{r, echo = FALSE}
# Top 5 most-watched titles
top_titles <- netflix_clean %>%
  group_by(title, 
           type, 
           release_year) %>%
  summarise(total_hours = sum(hours_viewed, na.rm = TRUE), 
            .groups = "drop") %>%
  arrange(desc(total_hours)) %>%
  slice_head(n = 5)

# Display as table
top_titles %>%
  mutate(total_hours = scales::comma(total_hours)) %>%
  select(-release_year) %>% 
  knitr::kable(
    caption = "Table: Top 5 Most Watched Titles (Jan‚ÄìJun 2023)",
    col.names = c("Title", "Type", "Total Hours Viewed"))
```

\

To see what types of content dominate attention, total viewing hours were grouped by genre. Genres were extracted from the `listed_in` field and cleaned to avoid duplicates.

```{r, echo = FALSE}
genre_plot <- ggplot(genre_summary, 
                     aes(x = listed_in,
                         y = total_hours, 
                         fill = listed_in)) +
  geom_bar(stat = "identity",
           width = 1, 
           color = "white") +
  coord_polar() +
  scale_y_continuous(labels = scales::comma) +
  labs(
    title = "Top 10 Most Watched Genres on Netflix (Jan‚ÄìJun 2023)",
    x = "",
    y = "Total Hours Viewed") +
  theme_bw() +
  theme(
    axis.text.x = element_text(size = 10, face = "bold"),
    plot.title = element_text(hjust = 0.5, face = "bold"),
    legend.position = "none")
genre_plot
```

**What it shows:**\
Comedies and dramas dominated viewer attention in the first half of 2023, each amassing over a billion hours of watch time globally. Family movies and action titles also performed strongly, suggesting that genres with broad, cross-generational appeal tend to attract higher engagement. Meanwhile, more niche categories like horror and sci-fi had lower total viewing hours, though they still featured among the top ten.

------------------------------------------------------------------------

#### **Genre Preferences by Format**

To compare how TV shows and movies perform across genres, titles were grouped by both `type` and `genre`, and total viewing hours were summed. This allowed a direct visual comparison of content preferences across formats.

```{r, echo=FALSE}
ggplot(genre_by_type, 
       aes(x = reorder(genre, hours_viewed), 
           y = hours_viewed, 
           fill = type)) +
  geom_col(show.legend = FALSE) +
  coord_flip() +
  facet_wrap(~type, 
             scales = "free") +
  scale_y_continuous(labels = label_number(scale_cut = cut_short_scale())) +
  labs(
    title = "Top 10 Most Watched Genres: Movies vs TV Shows",
    x = "Genre",
    y = "Total Hours Viewed") +
  theme_bw() +
  theme(
    strip.text = element_text(face = "bold", size = 12),
    plot.title = element_text(face = "bold", hjust = 0.5),
    axis.text.y = element_text(size = 9))
```

**What it shows:**\
This chart compares the most-watched genres on Netflix across movies and TV shows. For movies, **comedies** and **dramas** dominated total viewership, followed by action, romance, and thrillers. In contrast, top-performing TV content leaned toward **mysteries**, **horror**, and **sci-fi/fantasy** ‚Äî genres commonly associated with episodic suspense and longer narrative arcs.

The side-by-side layout highlights how **audience preferences differ by format**. While viewers tend to choose movies for emotionally driven or family-oriented stories, they often turn to TV shows for immersive, suspense-heavy content. This reinforces the idea that **format influences viewing behavior**, with pacing and structure playing key roles in genre appeal.

**Summary Table**\
While visual plots show broad trends, this table summarises the five most-watched genres **within each format**. Action and comedy dominate the movie side, while crime and docuseries content appear more prominently in the top TV genres ‚Äî reflecting the structural advantage of episodic storytelling in long-form viewing.

```{r, echo=FALSE}
# Explode genres
genre_by_type_top <- netflix_clean %>%
  separate_rows(listed_in, 
                sep = ",\\s*") %>%
  group_by(type, 
           genre = listed_in) %>%
  summarise(total_hours = sum(hours_viewed, 
                              na.rm = TRUE), 
            .groups = "drop") %>%
  arrange(type, desc(total_hours)) %>%
  group_by(type) %>%
  slice_head(n = 5)

# Format table nicely
genre_by_type_top %>%
  mutate(total_hours = scales::comma(total_hours)) %>%
  knitr::kable(
    caption = "Table: Top 5 Most Watched Genres by Format",
    col.names = c("Format", "Genre", "Total Hours Viewed"))
```

------------------------------------------------------------------------

#### **3. Is Longer Better?**

To explore the relationship between content length and engagement, titles were grouped by format and plotted using separate violin plots: one for movie runtimes (in minutes), and another for TV show durations (in seasons).

```{r, echo=FALSE}
# Movie Plot
movie_plot <- duration_clean %>%
  filter(type == "Movie") %>%
  ggplot(aes(x = type, 
             y = duration_num,
             fill = type)) +
  geom_violin(alpha = 0.3, 
              color = NA) +
  labs(
    title = "Movie Duration Distribution",
    y = "Minutes",
    x = NULL) +
  scale_fill_manual(values = c("Movie" = "#ff6661")) +
  theme_bw() +
  theme(
    plot.title = element_text(face = "bold",
                              hjust = 0.5),
    axis.text.x = element_blank(),
    axis.ticks.x = element_blank(),
    legend.position = "none")

# TV Plot
tv_plot <- duration_clean %>%
  filter(type == "TV Show") %>%
  ggplot(aes(x = type, 
             y = duration_num, 
             fill = type)) +
  geom_violin(alpha = 0.3,
              color = NA) +
  labs(
    title = "TV Show Duration Distribution",
    y = "Seasons",
    x = NULL) +
  scale_fill_manual(values = c("TV Show" = "#00bfc4")) +
  scale_y_continuous(breaks = 1:6, 
                     limits = c(1, 6)) +
  theme_bw() +
  theme(
    plot.title = element_text(face = "bold", 
                              hjust = 0.5),
    axis.text.x = element_blank(),
    axis.ticks.x = element_blank(),
    legend.position = "none")

# Combine with patchwork
movie_plot + tv_plot
```

**What it shows:**\
There is no strong or consistent relationship between duration and viewership. Most **movies** clustered around the 90‚Äì120 minute mark, with a few shorter and longer outliers ‚Äî yet both extremes saw varying engagement. **TV shows**, on the other hand, were predominantly one-season formats, with limited variation across the dataset. This suggests that **binge-worthiness isn‚Äôt purely driven by length**. Factors such as content quality, genre, release timing, and episodic design likely play a larger role in sustaining viewer attention.

------------------------------------------------------------------------

### üéØ Conclusion

The analysis suggests that **viewer engagement on Netflix is influenced by a combination of genre, format, and content structure** ‚Äî not any single factor. While popular genres like **comedies** and **dramas** consistently pull high viewership, others like **horror** and **sci-fi** perform better in specific formats (e.g. TV shows).

The genre breakdown showed distinct preferences between **movies and series**, with audiences leaning toward emotional or family-friendly content in films, and suspenseful, episodic storytelling in shows. The duration comparison further revealed that **most movies fall in the 90‚Äì120 minute range**, while **TV shows cluster around 1‚Äì2 seasons**, though engagement doesn't necessarily scale with length.

For students exploring data storytelling, this example demonstrates how **public datasets can uncover cultural trends** and viewer behaviour. Simple preprocessing and visualisation choices ‚Äî like separating genres or handling mixed-duration fields ‚Äî often unlock deeper narratives hidden beneath the surface.

------------------------------------------------------------------------

### üìö References

-   Netflix. [*What We Watched: A Netflix Engagement Report*.](https://www.netflix.com/whatwewatched)
-   Kaggle. [*Netflix Movies and TV Shows Dataset*.](https://www.kaggle.com/datasets/shivamb/netflix-shows)

<!-- Task 3 Tab: Behind the Scenes -  -->

## Behind the Scenes

:::
